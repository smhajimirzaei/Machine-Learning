{"title":"CV for Lubricity","markdown":{"yaml":{"title":"CV for Lubricity","author":"Morteza Mirzaei","date":"2023-12-09","categories":["code","analysis"],"image":"image.jpg"},"headingText":"Lubricity detection using Computer Vision","containsRefs":false,"markdown":"\n\n\nIn this project, a camera was mounted on a rail cart targeted the gage face of the rail. The recorded videos then were processed to autonomously identify lubricated sections\n\n```         \nfrom google.colab import drive\ndrive.mount('/content/drive')\n```\n\n```         \ndef interactive_plot_scatter(df, x_axis, y_axis, xlabel, ylabel):\n  import plotly.express as px\n\n  fig = px.scatter(df, x_axis, y_axis).update_layout(xaxis_title=xlabel, yaxis_title=ylabel)\n\n  return fig.show()\n\ndef interactive_plot_line(df, x_axis, y_axis, xlabel, ylabel):\n  import plotly.express as px\n\n  fig = px.line(df, x_axis, y_axis).update_layout(xaxis_title=xlabel, yaxis_title=ylabel)\n\n  return fig.show()\n```\n\n```         \n!pip install moviepy\n!pip3 install imageio==2.4.1\n!pip install --upgrade imageio-ffmpeg\n```\n\n```         \nimport moviepy.editor as mp\nimport cv2\nimport os\nimport numpy as np\nimport pandas as pd\nfrom google.colab.patches import cv2_imshow\nfrom numpy import genfromtxt\nfrom PIL import Image\nimport os\nfrom moviepy.editor import *\n```\n\n```         \nTest = 'Test_1'\nCamera = 'A'\nEncoder = 'MP4'\n```\n\n```         \nvideo_path = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/' + Test + '/' + Test + '_' + Camera + '.' + Encoder\nsave_path = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/' + Test +'/Reduced_size/' + Test + '_' + Camera + '.' + Encoder\n```\n\n# Find bounds\n\nBy trial and error, coordinates of the target were identified. Now we can crop the images to get rid of redundant parts of the image. This would dramatically reduce the computation cost.\n\n```         \ndef Find_bounds(video_path, time, X_low, X_high, Y_low, Y_high):\n  cap = cv2.VideoCapture(video_path)\n  clip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\n\n  cap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\n  hasFrames,image1 = cap.read()\n\n  image0 = image1[X_low:X_high, Y_low:Y_high]\n\n  # cv2_imshow(image1)\n  # cv2_imshow(image0)\n  return image1, image0\n```\n\n```         \ntime = 40\n\ncap = cv2.VideoCapture(video_path)\ncap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\nhasFrames,image1 = cap.read()\n\nX_low = int(image1.shape[0]/2-125)\nX_high = int(image1.shape[0]/2+25)\nY_low = int(image1.shape[1]/2-75)\nY_high = int(image1.shape[1]/2+75)\n\nimage1, image0 = Find_bounds(video_path, time, X_low, X_high, Y_low, Y_high)\n\ncv2_imshow(image0)\ncv2_imshow(image1)\n```\n\n![](images/14.png)\n\n![](images/15.png)\n\n# Reduce Size\n\nIn this section, we reduce the image sizes to lower the computation cost.\n\n```         \ndef reduce_size(video_path, save_path, Start_Time, End_Time):\n  cap = cv2.VideoCapture(video_path)\n  clip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\n  clip = VideoFileClip(video_path).subclip(Start_Time, End_Time)\n\n  my_width = image1.shape[1]//2\n  my_height = image1.shape[0]//2\n\n  clip_resized = clip.resize(newsize=(my_width, my_height))\n  clip_resized.write_videofile(save_path)\n```\n\n```         \nreduce_size(video_path, save_path, Start_Time = 4*60 + 47, End_Time = 10*60 + 17)\n```\n\n# Framing\n\nIn this section the videos were divided intp frames and saved as images.\n\n```         \nvideo_path = save_path\n\ncap = cv2.VideoCapture(video_path)\n\nclip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\nclip_duration\n```\n\n330.005005\n\n```         \ntime = 0.00\nimg = []\nt = []\nfps = 1 / 10\n\nwhile (time)<clip_duration:\n  cap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\n  hasFrames,image0 = cap.read()\n  if hasFrames:\n    image = image0[int(X_low/2):int(X_high/2), int(Y_low/2):int(Y_high/2)]\n    img.append(image)\n    t.append(time)\n    print(time)\n  time = round(time + fps, 2)\n```\n\n```         \nfrom google.colab.patches import cv2_imshow\n\ncv2_imshow(img[1000])\n```\n\n![](images/16.png)\n\n# Save the frames\n\n```         \nc = 0\nindex = []\ntime0 = time\n\nfor i in t:\n  path = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Camera_C/Index_' + str(c) + '.jpg'\n  cv2.imwrite(path, img[c])\n  index.append('Index_' + str(c))\n  print(i)\n  c = c + 1\n\n\nd = {'Image_index': index, 'time': t}\ndf = pd.DataFrame(data=d)\n\ndf.to_csv('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/index-time_Test1C.csv')\n```\n\n# Load the data\n\n```         \ndf_new = pd.read_csv('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/index-time_Test1A.csv')\n\ndirpath = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Test_1_A/'\n\nshots = []\nidx = []\n\nfor i in range(0, df_new['time'].shape[0]):\n  if os.path.exists(dirpath + 'Index_' + str(i) + '.jpg'):\n    shots.append(cv2.imread(dirpath + 'Index_' + str(i) + '.jpg'))\n    idx.append('Index_' + str(i))\n  else:\n    break\n\n\ndf_new['image_index'] = idx\ndf_new['processed_images'] = shots\n```\n\n# Training\n\n## Auto Labeling\n\nTwo sections of the video were lubricated. We manually labeled part of them for training.\n\n```         \nL = [886, 1379, 1792, 2809]     # L = ['Start of Lubrication' : index number, 'End of Lubrication' : index number, /////]\nendpoint = len(df_new)\nstep = 10\n\nlabels = np.ones(endpoint) * (-1)\n\nfor i in range(0, endpoint, step):\n  labels[i] = 0\n  for j in range(int(len(L) / 2)):\n    if (df_new.iloc[i]['Unnamed: 0']>L[j*2]) and (df_new.iloc[i]['Unnamed: 0']<L[j*2+1]):\n      labels[i] = 1\n\ndf_new['labels'] = labels\ndf_train = df_new[df_new['labels'] != -1]\n```\n\n```         \nfeatures = []\n\nfor i in range(0, len(df_train['processed_images'])):\n  features.append(np.array(df_train.iloc[i]['processed_images']))\n\nfeatures = np.array(features)\n\nlabels = df_train['labels']\n\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split\n\nfeatures = features.astype('float32') / 255.0\n```\n\n```         \ntrain_x, test_x, train_y, test_y = train_test_split(features, labels, test_size=0.2, stratify=labels)\n\ntrain_x, train_y = shuffle(train_x, train_y, random_state=0)\ntest_x, test_y = shuffle(test_x, test_y, random_state=0)\n```\n\n```         \nprint(train_x.shape)\nprint(train_y.shape)\nprint(test_x.shape)\nprint(test_y.shape)\n```\n\n(269, 100, 100, 3)\n(269,)\n(68, 100, 100, 3)\n(68,)\n\n```         \nfrom keras.applications.inception_v3 import InceptionV3\nfrom keras.preprocessing import image\nfrom keras.models import Model, Sequential\nfrom keras.layers import Dense, GlobalAveragePooling2D, Dropout, Flatten, Dense\n```\n\n```         \nbase_model = InceptionV3(weights='imagenet', include_top=False,input_shape=df_train.iloc[0]['processed_images'].shape)\nfor layer in base_model.layers:\n    layer.trainable = False\n\nx = base_model.output\nx = GlobalAveragePooling2D()(x)\nx = Dense(1024, activation='relu')(x)\npredictions = Dense(1, activation='sigmoid')(x)\n\nImported_model = Model(inputs=base_model.input, outputs=predictions)\n```\n\n```         \nImported_model.summary()\n```\n\nModel: \"model_1\"\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\nLayer (type) Output Shape Param \\# Connected to\n==================================================================================================\ninput_2 (InputLayer) \\[(None, 100, 100, 3 0 \\[\\]\n)\\]\n\nconv2d_94 (Conv2D) (None, 49, 49, 32) 864 \\['input_2\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_94 (BatchN (None, 49, 49, 32) 96 \\['conv2d_94\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_94 (Activation) (None, 49, 49, 32) 0 \\['batch_normalization_94\\[0\\]\\[0\\]'\\]\n\nconv2d_95 (Conv2D) (None, 47, 47, 32) 9216 \\['activation_94\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_95 (BatchN (None, 47, 47, 32) 96 \\['conv2d_95\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_95 (Activation) (None, 47, 47, 32) 0 \\['batch_normalization_95\\[0\\]\\[0\\]'\\]\n\nconv2d_96 (Conv2D) (None, 47, 47, 64) 18432 \\['activation_95\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_96 (BatchN (None, 47, 47, 64) 192 \\['conv2d_96\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_96 (Activation) (None, 47, 47, 64) 0 \\['batch_normalization_96\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_4 (MaxPooling2D) (None, 23, 23, 64) 0 \\['activation_96\\[0\\]\\[0\\]'\\]\n\nconv2d_97 (Conv2D) (None, 23, 23, 80) 5120 \\['max_pooling2d_4\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_97 (BatchN (None, 23, 23, 80) 240 \\['conv2d_97\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_97 (Activation) (None, 23, 23, 80) 0 \\['batch_normalization_97\\[0\\]\\[0\\]'\\]\n\nconv2d_98 (Conv2D) (None, 21, 21, 192) 138240 \\['activation_97\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_98 (BatchN (None, 21, 21, 192) 576 \\['conv2d_98\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_98 (Activation) (None, 21, 21, 192) 0 \\['batch_normalization_98\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_5 (MaxPooling2D) (None, 10, 10, 192) 0 \\['activation_98\\[0\\]\\[0\\]'\\]\n\nconv2d_102 (Conv2D) (None, 10, 10, 64) 12288 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_102 (Batch (None, 10, 10, 64) 192 \\['conv2d_102\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_102 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_102\\[0\\]\\[0\\]'\\]\n\nconv2d_100 (Conv2D) (None, 10, 10, 48) 9216 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\n\nconv2d_103 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_102\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_100 (Batch (None, 10, 10, 48) 144 \\['conv2d_100\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_103 (Batch (None, 10, 10, 96) 288 \\['conv2d_103\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_100 (Activation) (None, 10, 10, 48) 0 \\['batch_normalization_100\\[0\\]\\[0\\]'\\]\n\nactivation_103 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_103\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_9 (AveragePo (None, 10, 10, 192) 0 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\noling2D)\n\nconv2d_99 (Conv2D) (None, 10, 10, 64) 12288 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\n\nconv2d_101 (Conv2D) (None, 10, 10, 64) 76800 \\['activation_100\\[0\\]\\[0\\]'\\]\n\nconv2d_104 (Conv2D) (None, 10, 10, 96) 82944 \\['activation_103\\[0\\]\\[0\\]'\\]\n\nconv2d_105 (Conv2D) (None, 10, 10, 32) 6144 \\['average_pooling2d_9\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_99 (BatchN (None, 10, 10, 64) 192 \\['conv2d_99\\[0\\]\\[0\\]'\\]\normalization)\n\nbatch_normalization_101 (Batch (None, 10, 10, 64) 192 \\['conv2d_101\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_104 (Batch (None, 10, 10, 96) 288 \\['conv2d_104\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_105 (Batch (None, 10, 10, 32) 96 \\['conv2d_105\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_99 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_99\\[0\\]\\[0\\]'\\]\n\nactivation_101 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_101\\[0\\]\\[0\\]'\\]\n\nactivation_104 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_104\\[0\\]\\[0\\]'\\]\n\nactivation_105 (Activation) (None, 10, 10, 32) 0 \\['batch_normalization_105\\[0\\]\\[0\\]'\\]\n\nmixed0 (Concatenate) (None, 10, 10, 256) 0 \\['activation_99\\[0\\]\\[0\\]',\n'activation_101\\[0\\]\\[0\\]',\n'activation_104\\[0\\]\\[0\\]',\n'activation_105\\[0\\]\\[0\\]'\\]\n\nconv2d_109 (Conv2D) (None, 10, 10, 64) 16384 \\['mixed0\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_109 (Batch (None, 10, 10, 64) 192 \\['conv2d_109\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_109 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_109\\[0\\]\\[0\\]'\\]\n\nconv2d_107 (Conv2D) (None, 10, 10, 48) 12288 \\['mixed0\\[0\\]\\[0\\]'\\]\n\nconv2d_110 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_109\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_107 (Batch (None, 10, 10, 48) 144 \\['conv2d_107\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_110 (Batch (None, 10, 10, 96) 288 \\['conv2d_110\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_107 (Activation) (None, 10, 10, 48) 0 \\['batch_normalization_107\\[0\\]\\[0\\]'\\]\n\nactivation_110 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_110\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_10 (AverageP (None, 10, 10, 256) 0 \\['mixed0\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_106 (Conv2D) (None, 10, 10, 64) 16384 \\['mixed0\\[0\\]\\[0\\]'\\]\n\nconv2d_108 (Conv2D) (None, 10, 10, 64) 76800 \\['activation_107\\[0\\]\\[0\\]'\\]\n\nconv2d_111 (Conv2D) (None, 10, 10, 96) 82944 \\['activation_110\\[0\\]\\[0\\]'\\]\n\nconv2d_112 (Conv2D) (None, 10, 10, 64) 16384 \\['average_pooling2d_10\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_106 (Batch (None, 10, 10, 64) 192 \\['conv2d_106\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_108 (Batch (None, 10, 10, 64) 192 \\['conv2d_108\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_111 (Batch (None, 10, 10, 96) 288 \\['conv2d_111\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_112 (Batch (None, 10, 10, 64) 192 \\['conv2d_112\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_106 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_106\\[0\\]\\[0\\]'\\]\n\nactivation_108 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_108\\[0\\]\\[0\\]'\\]\n\nactivation_111 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_111\\[0\\]\\[0\\]'\\]\n\nactivation_112 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_112\\[0\\]\\[0\\]'\\]\n\nmixed1 (Concatenate) (None, 10, 10, 288) 0 \\['activation_106\\[0\\]\\[0\\]',\n'activation_108\\[0\\]\\[0\\]',\n'activation_111\\[0\\]\\[0\\]',\n'activation_112\\[0\\]\\[0\\]'\\]\n\nconv2d_116 (Conv2D) (None, 10, 10, 64) 18432 \\['mixed1\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_116 (Batch (None, 10, 10, 64) 192 \\['conv2d_116\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_116 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_116\\[0\\]\\[0\\]'\\]\n\nconv2d_114 (Conv2D) (None, 10, 10, 48) 13824 \\['mixed1\\[0\\]\\[0\\]'\\]\n\nconv2d_117 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_116\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_114 (Batch (None, 10, 10, 48) 144 \\['conv2d_114\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_117 (Batch (None, 10, 10, 96) 288 \\['conv2d_117\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_114 (Activation) (None, 10, 10, 48) 0 \\['batch_normalization_114\\[0\\]\\[0\\]'\\]\n\nactivation_117 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_117\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_11 (AverageP (None, 10, 10, 288) 0 \\['mixed1\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_113 (Conv2D) (None, 10, 10, 64) 18432 \\['mixed1\\[0\\]\\[0\\]'\\]\n\nconv2d_115 (Conv2D) (None, 10, 10, 64) 76800 \\['activation_114\\[0\\]\\[0\\]'\\]\n\nconv2d_118 (Conv2D) (None, 10, 10, 96) 82944 \\['activation_117\\[0\\]\\[0\\]'\\]\n\nconv2d_119 (Conv2D) (None, 10, 10, 64) 18432 \\['average_pooling2d_11\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_113 (Batch (None, 10, 10, 64) 192 \\['conv2d_113\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_115 (Batch (None, 10, 10, 64) 192 \\['conv2d_115\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_118 (Batch (None, 10, 10, 96) 288 \\['conv2d_118\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_119 (Batch (None, 10, 10, 64) 192 \\['conv2d_119\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_113 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_113\\[0\\]\\[0\\]'\\]\n\nactivation_115 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_115\\[0\\]\\[0\\]'\\]\n\nactivation_118 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_118\\[0\\]\\[0\\]'\\]\n\nactivation_119 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_119\\[0\\]\\[0\\]'\\]\n\nmixed2 (Concatenate) (None, 10, 10, 288) 0 \\['activation_113\\[0\\]\\[0\\]',\n'activation_115\\[0\\]\\[0\\]',\n'activation_118\\[0\\]\\[0\\]',\n'activation_119\\[0\\]\\[0\\]'\\]\n\nconv2d_121 (Conv2D) (None, 10, 10, 64) 18432 \\['mixed2\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_121 (Batch (None, 10, 10, 64) 192 \\['conv2d_121\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_121 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_121\\[0\\]\\[0\\]'\\]\n\nconv2d_122 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_121\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_122 (Batch (None, 10, 10, 96) 288 \\['conv2d_122\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_122 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_122\\[0\\]\\[0\\]'\\]\n\nconv2d_120 (Conv2D) (None, 4, 4, 384) 995328 \\['mixed2\\[0\\]\\[0\\]'\\]\n\nconv2d_123 (Conv2D) (None, 4, 4, 96) 82944 \\['activation_122\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_120 (Batch (None, 4, 4, 384) 1152 \\['conv2d_120\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_123 (Batch (None, 4, 4, 96) 288 \\['conv2d_123\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_120 (Activation) (None, 4, 4, 384) 0 \\['batch_normalization_120\\[0\\]\\[0\\]'\\]\n\nactivation_123 (Activation) (None, 4, 4, 96) 0 \\['batch_normalization_123\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_6 (MaxPooling2D) (None, 4, 4, 288) 0 \\['mixed2\\[0\\]\\[0\\]'\\]\n\nmixed3 (Concatenate) (None, 4, 4, 768) 0 \\['activation_120\\[0\\]\\[0\\]',\n'activation_123\\[0\\]\\[0\\]',\n'max_pooling2d_6\\[0\\]\\[0\\]'\\]\n\nconv2d_128 (Conv2D) (None, 4, 4, 128) 98304 \\['mixed3\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_128 (Batch (None, 4, 4, 128) 384 \\['conv2d_128\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_128 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_128\\[0\\]\\[0\\]'\\]\n\nconv2d_129 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_128\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_129 (Batch (None, 4, 4, 128) 384 \\['conv2d_129\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_129 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_129\\[0\\]\\[0\\]'\\]\n\nconv2d_125 (Conv2D) (None, 4, 4, 128) 98304 \\['mixed3\\[0\\]\\[0\\]'\\]\n\nconv2d_130 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_129\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_125 (Batch (None, 4, 4, 128) 384 \\['conv2d_125\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_130 (Batch (None, 4, 4, 128) 384 \\['conv2d_130\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_125 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_125\\[0\\]\\[0\\]'\\]\n\nactivation_130 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_130\\[0\\]\\[0\\]'\\]\n\nconv2d_126 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_125\\[0\\]\\[0\\]'\\]\n\nconv2d_131 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_130\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_126 (Batch (None, 4, 4, 128) 384 \\['conv2d_126\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_131 (Batch (None, 4, 4, 128) 384 \\['conv2d_131\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_126 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_126\\[0\\]\\[0\\]'\\]\n\nactivation_131 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_131\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_12 (AverageP (None, 4, 4, 768) 0 \\['mixed3\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_124 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed3\\[0\\]\\[0\\]'\\]\n\nconv2d_127 (Conv2D) (None, 4, 4, 192) 172032 \\['activation_126\\[0\\]\\[0\\]'\\]\n\nconv2d_132 (Conv2D) (None, 4, 4, 192) 172032 \\['activation_131\\[0\\]\\[0\\]'\\]\n\nconv2d_133 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_12\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_124 (Batch (None, 4, 4, 192) 576 \\['conv2d_124\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_127 (Batch (None, 4, 4, 192) 576 \\['conv2d_127\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_132 (Batch (None, 4, 4, 192) 576 \\['conv2d_132\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_133 (Batch (None, 4, 4, 192) 576 \\['conv2d_133\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_124 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_124\\[0\\]\\[0\\]'\\]\n\nactivation_127 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_127\\[0\\]\\[0\\]'\\]\n\nactivation_132 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_132\\[0\\]\\[0\\]'\\]\n\nactivation_133 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_133\\[0\\]\\[0\\]'\\]\n\nmixed4 (Concatenate) (None, 4, 4, 768) 0 \\['activation_124\\[0\\]\\[0\\]',\n'activation_127\\[0\\]\\[0\\]',\n'activation_132\\[0\\]\\[0\\]',\n'activation_133\\[0\\]\\[0\\]'\\]\n\nconv2d_138 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed4\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_138 (Batch (None, 4, 4, 160) 480 \\['conv2d_138\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_138 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_138\\[0\\]\\[0\\]'\\]\n\nconv2d_139 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_138\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_139 (Batch (None, 4, 4, 160) 480 \\['conv2d_139\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_139 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_139\\[0\\]\\[0\\]'\\]\n\nconv2d_135 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed4\\[0\\]\\[0\\]'\\]\n\nconv2d_140 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_139\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_135 (Batch (None, 4, 4, 160) 480 \\['conv2d_135\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_140 (Batch (None, 4, 4, 160) 480 \\['conv2d_140\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_135 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_135\\[0\\]\\[0\\]'\\]\n\nactivation_140 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_140\\[0\\]\\[0\\]'\\]\n\nconv2d_136 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_135\\[0\\]\\[0\\]'\\]\n\nconv2d_141 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_140\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_136 (Batch (None, 4, 4, 160) 480 \\['conv2d_136\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_141 (Batch (None, 4, 4, 160) 480 \\['conv2d_141\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_136 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_136\\[0\\]\\[0\\]'\\]\n\nactivation_141 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_141\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_13 (AverageP (None, 4, 4, 768) 0 \\['mixed4\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_134 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed4\\[0\\]\\[0\\]'\\]\n\nconv2d_137 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_136\\[0\\]\\[0\\]'\\]\n\nconv2d_142 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_141\\[0\\]\\[0\\]'\\]\n\nconv2d_143 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_13\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_134 (Batch (None, 4, 4, 192) 576 \\['conv2d_134\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_137 (Batch (None, 4, 4, 192) 576 \\['conv2d_137\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_142 (Batch (None, 4, 4, 192) 576 \\['conv2d_142\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_143 (Batch (None, 4, 4, 192) 576 \\['conv2d_143\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_134 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_134\\[0\\]\\[0\\]'\\]\n\nactivation_137 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_137\\[0\\]\\[0\\]'\\]\n\nactivation_142 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_142\\[0\\]\\[0\\]'\\]\n\nactivation_143 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_143\\[0\\]\\[0\\]'\\]\n\nmixed5 (Concatenate) (None, 4, 4, 768) 0 \\['activation_134\\[0\\]\\[0\\]',\n'activation_137\\[0\\]\\[0\\]',\n'activation_142\\[0\\]\\[0\\]',\n'activation_143\\[0\\]\\[0\\]'\\]\n\nconv2d_148 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed5\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_148 (Batch (None, 4, 4, 160) 480 \\['conv2d_148\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_148 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_148\\[0\\]\\[0\\]'\\]\n\nconv2d_149 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_148\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_149 (Batch (None, 4, 4, 160) 480 \\['conv2d_149\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_149 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_149\\[0\\]\\[0\\]'\\]\n\nconv2d_145 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed5\\[0\\]\\[0\\]'\\]\n\nconv2d_150 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_149\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_145 (Batch (None, 4, 4, 160) 480 \\['conv2d_145\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_150 (Batch (None, 4, 4, 160) 480 \\['conv2d_150\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_145 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_145\\[0\\]\\[0\\]'\\]\n\nactivation_150 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_150\\[0\\]\\[0\\]'\\]\n\nconv2d_146 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_145\\[0\\]\\[0\\]'\\]\n\nconv2d_151 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_150\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_146 (Batch (None, 4, 4, 160) 480 \\['conv2d_146\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_151 (Batch (None, 4, 4, 160) 480 \\['conv2d_151\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_146 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_146\\[0\\]\\[0\\]'\\]\n\nactivation_151 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_151\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_14 (AverageP (None, 4, 4, 768) 0 \\['mixed5\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_144 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed5\\[0\\]\\[0\\]'\\]\n\nconv2d_147 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_146\\[0\\]\\[0\\]'\\]\n\nconv2d_152 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_151\\[0\\]\\[0\\]'\\]\n\nconv2d_153 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_14\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_144 (Batch (None, 4, 4, 192) 576 \\['conv2d_144\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_147 (Batch (None, 4, 4, 192) 576 \\['conv2d_147\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_152 (Batch (None, 4, 4, 192) 576 \\['conv2d_152\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_153 (Batch (None, 4, 4, 192) 576 \\['conv2d_153\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_144 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_144\\[0\\]\\[0\\]'\\]\n\nactivation_147 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_147\\[0\\]\\[0\\]'\\]\n\nactivation_152 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_152\\[0\\]\\[0\\]'\\]\n\nactivation_153 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_153\\[0\\]\\[0\\]'\\]\n\nmixed6 (Concatenate) (None, 4, 4, 768) 0 \\['activation_144\\[0\\]\\[0\\]',\n'activation_147\\[0\\]\\[0\\]',\n'activation_152\\[0\\]\\[0\\]',\n'activation_153\\[0\\]\\[0\\]'\\]\n\nconv2d_158 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed6\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_158 (Batch (None, 4, 4, 192) 576 \\['conv2d_158\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_158 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_158\\[0\\]\\[0\\]'\\]\n\nconv2d_159 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_158\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_159 (Batch (None, 4, 4, 192) 576 \\['conv2d_159\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_159 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_159\\[0\\]\\[0\\]'\\]\n\nconv2d_155 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed6\\[0\\]\\[0\\]'\\]\n\nconv2d_160 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_159\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_155 (Batch (None, 4, 4, 192) 576 \\['conv2d_155\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_160 (Batch (None, 4, 4, 192) 576 \\['conv2d_160\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_155 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_155\\[0\\]\\[0\\]'\\]\n\nactivation_160 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_160\\[0\\]\\[0\\]'\\]\n\nconv2d_156 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_155\\[0\\]\\[0\\]'\\]\n\nconv2d_161 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_160\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_156 (Batch (None, 4, 4, 192) 576 \\['conv2d_156\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_161 (Batch (None, 4, 4, 192) 576 \\['conv2d_161\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_156 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_156\\[0\\]\\[0\\]'\\]\n\nactivation_161 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_161\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_15 (AverageP (None, 4, 4, 768) 0 \\['mixed6\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_154 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed6\\[0\\]\\[0\\]'\\]\n\nconv2d_157 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_156\\[0\\]\\[0\\]'\\]\n\nconv2d_162 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_161\\[0\\]\\[0\\]'\\]\n\nconv2d_163 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_15\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_154 (Batch (None, 4, 4, 192) 576 \\['conv2d_154\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_157 (Batch (None, 4, 4, 192) 576 \\['conv2d_157\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_162 (Batch (None, 4, 4, 192) 576 \\['conv2d_162\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_163 (Batch (None, 4, 4, 192) 576 \\['conv2d_163\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_154 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_154\\[0\\]\\[0\\]'\\]\n\nactivation_157 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_157\\[0\\]\\[0\\]'\\]\n\nactivation_162 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_162\\[0\\]\\[0\\]'\\]\n\nactivation_163 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_163\\[0\\]\\[0\\]'\\]\n\nmixed7 (Concatenate) (None, 4, 4, 768) 0 \\['activation_154\\[0\\]\\[0\\]',\n'activation_157\\[0\\]\\[0\\]',\n'activation_162\\[0\\]\\[0\\]',\n'activation_163\\[0\\]\\[0\\]'\\]\n\nconv2d_166 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed7\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_166 (Batch (None, 4, 4, 192) 576 \\['conv2d_166\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_166 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_166\\[0\\]\\[0\\]'\\]\n\nconv2d_167 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_166\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_167 (Batch (None, 4, 4, 192) 576 \\['conv2d_167\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_167 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_167\\[0\\]\\[0\\]'\\]\n\nconv2d_164 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed7\\[0\\]\\[0\\]'\\]\n\nconv2d_168 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_167\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_164 (Batch (None, 4, 4, 192) 576 \\['conv2d_164\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_168 (Batch (None, 4, 4, 192) 576 \\['conv2d_168\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_164 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_164\\[0\\]\\[0\\]'\\]\n\nactivation_168 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_168\\[0\\]\\[0\\]'\\]\n\nconv2d_165 (Conv2D) (None, 1, 1, 320) 552960 \\['activation_164\\[0\\]\\[0\\]'\\]\n\nconv2d_169 (Conv2D) (None, 1, 1, 192) 331776 \\['activation_168\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_165 (Batch (None, 1, 1, 320) 960 \\['conv2d_165\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_169 (Batch (None, 1, 1, 192) 576 \\['conv2d_169\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_165 (Activation) (None, 1, 1, 320) 0 \\['batch_normalization_165\\[0\\]\\[0\\]'\\]\n\nactivation_169 (Activation) (None, 1, 1, 192) 0 \\['batch_normalization_169\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_7 (MaxPooling2D) (None, 1, 1, 768) 0 \\['mixed7\\[0\\]\\[0\\]'\\]\n\nmixed8 (Concatenate) (None, 1, 1, 1280) 0 \\['activation_165\\[0\\]\\[0\\]',\n'activation_169\\[0\\]\\[0\\]',\n'max_pooling2d_7\\[0\\]\\[0\\]'\\]\n\nconv2d_174 (Conv2D) (None, 1, 1, 448) 573440 \\['mixed8\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_174 (Batch (None, 1, 1, 448) 1344 \\['conv2d_174\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_174 (Activation) (None, 1, 1, 448) 0 \\['batch_normalization_174\\[0\\]\\[0\\]'\\]\n\nconv2d_171 (Conv2D) (None, 1, 1, 384) 491520 \\['mixed8\\[0\\]\\[0\\]'\\]\n\nconv2d_175 (Conv2D) (None, 1, 1, 384) 1548288 \\['activation_174\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_171 (Batch (None, 1, 1, 384) 1152 \\['conv2d_171\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_175 (Batch (None, 1, 1, 384) 1152 \\['conv2d_175\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_171 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_171\\[0\\]\\[0\\]'\\]\n\nactivation_175 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_175\\[0\\]\\[0\\]'\\]\n\nconv2d_172 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_171\\[0\\]\\[0\\]'\\]\n\nconv2d_173 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_171\\[0\\]\\[0\\]'\\]\n\nconv2d_176 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_175\\[0\\]\\[0\\]'\\]\n\nconv2d_177 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_175\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_16 (AverageP (None, 1, 1, 1280) 0 \\['mixed8\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_170 (Conv2D) (None, 1, 1, 320) 409600 \\['mixed8\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_172 (Batch (None, 1, 1, 384) 1152 \\['conv2d_172\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_173 (Batch (None, 1, 1, 384) 1152 \\['conv2d_173\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_176 (Batch (None, 1, 1, 384) 1152 \\['conv2d_176\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_177 (Batch (None, 1, 1, 384) 1152 \\['conv2d_177\\[0\\]\\[0\\]'\\]\nNormalization)\n\nconv2d_178 (Conv2D) (None, 1, 1, 192) 245760 \\['average_pooling2d_16\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_170 (Batch (None, 1, 1, 320) 960 \\['conv2d_170\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_172 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_172\\[0\\]\\[0\\]'\\]\n\nactivation_173 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_173\\[0\\]\\[0\\]'\\]\n\nactivation_176 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_176\\[0\\]\\[0\\]'\\]\n\nactivation_177 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_177\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_178 (Batch (None, 1, 1, 192) 576 \\['conv2d_178\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_170 (Activation) (None, 1, 1, 320) 0 \\['batch_normalization_170\\[0\\]\\[0\\]'\\]\n\nmixed9_0 (Concatenate) (None, 1, 1, 768) 0 \\['activation_172\\[0\\]\\[0\\]',\n'activation_173\\[0\\]\\[0\\]'\\]\n\nconcatenate_2 (Concatenate) (None, 1, 1, 768) 0 \\['activation_176\\[0\\]\\[0\\]',\n'activation_177\\[0\\]\\[0\\]'\\]\n\nactivation_178 (Activation) (None, 1, 1, 192) 0 \\['batch_normalization_178\\[0\\]\\[0\\]'\\]\n\nmixed9 (Concatenate) (None, 1, 1, 2048) 0 \\['activation_170\\[0\\]\\[0\\]',\n'mixed9_0\\[0\\]\\[0\\]',\n'concatenate_2\\[0\\]\\[0\\]',\n'activation_178\\[0\\]\\[0\\]'\\]\n\nconv2d_183 (Conv2D) (None, 1, 1, 448) 917504 \\['mixed9\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_183 (Batch (None, 1, 1, 448) 1344 \\['conv2d_183\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_183 (Activation) (None, 1, 1, 448) 0 \\['batch_normalization_183\\[0\\]\\[0\\]'\\]\n\nconv2d_180 (Conv2D) (None, 1, 1, 384) 786432 \\['mixed9\\[0\\]\\[0\\]'\\]\n\nconv2d_184 (Conv2D) (None, 1, 1, 384) 1548288 \\['activation_183\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_180 (Batch (None, 1, 1, 384) 1152 \\['conv2d_180\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_184 (Batch (None, 1, 1, 384) 1152 \\['conv2d_184\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_180 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_180\\[0\\]\\[0\\]'\\]\n\nactivation_184 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_184\\[0\\]\\[0\\]'\\]\n\nconv2d_181 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_180\\[0\\]\\[0\\]'\\]\n\nconv2d_182 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_180\\[0\\]\\[0\\]'\\]\n\nconv2d_185 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_184\\[0\\]\\[0\\]'\\]\n\nconv2d_186 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_184\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_17 (AverageP (None, 1, 1, 2048) 0 \\['mixed9\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_179 (Conv2D) (None, 1, 1, 320) 655360 \\['mixed9\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_181 (Batch (None, 1, 1, 384) 1152 \\['conv2d_181\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_182 (Batch (None, 1, 1, 384) 1152 \\['conv2d_182\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_185 (Batch (None, 1, 1, 384) 1152 \\['conv2d_185\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_186 (Batch (None, 1, 1, 384) 1152 \\['conv2d_186\\[0\\]\\[0\\]'\\]\nNormalization)\n\nconv2d_187 (Conv2D) (None, 1, 1, 192) 393216 \\['average_pooling2d_17\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_179 (Batch (None, 1, 1, 320) 960 \\['conv2d_179\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_181 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_181\\[0\\]\\[0\\]'\\]\n\nactivation_182 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_182\\[0\\]\\[0\\]'\\]\n\nactivation_185 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_185\\[0\\]\\[0\\]'\\]\n\nactivation_186 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_186\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_187 (Batch (None, 1, 1, 192) 576 \\['conv2d_187\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_179 (Activation) (None, 1, 1, 320) 0 \\['batch_normalization_179\\[0\\]\\[0\\]'\\]\n\nmixed9_1 (Concatenate) (None, 1, 1, 768) 0 \\['activation_181\\[0\\]\\[0\\]',\n'activation_182\\[0\\]\\[0\\]'\\]\n\nconcatenate_3 (Concatenate) (None, 1, 1, 768) 0 \\['activation_185\\[0\\]\\[0\\]',\n'activation_186\\[0\\]\\[0\\]'\\]\n\nactivation_187 (Activation) (None, 1, 1, 192) 0 \\['batch_normalization_187\\[0\\]\\[0\\]'\\]\n\nmixed10 (Concatenate) (None, 1, 1, 2048) 0 \\['activation_179\\[0\\]\\[0\\]',\n'mixed9_1\\[0\\]\\[0\\]',\n'concatenate_3\\[0\\]\\[0\\]',\n'activation_187\\[0\\]\\[0\\]'\\]\n\nglobal_average_pooling2d_1 (Gl (None, 2048) 0 \\['mixed10\\[0\\]\\[0\\]'\\]\nobalAveragePooling2D)\n\ndense_2 (Dense) (None, 1024) 2098176 \\['global_average_pooling2d_1\\[0\\]\\[0\n\\]'\\]\n\ndense_3 (Dense) (None, 1) 1025 \\['dense_2\\[0\\]\\[0\\]'\\]\n\n==================================================================================================\nTotal params: 23,901,985\nTrainable params: 2,099,201\nNon-trainable params: 21,802,784\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\n```         \nsaveLoadpath = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/'\n\nImported_model.save(saveLoadpath + 'Test_1_A.h5')\n```\n\n```         \nsaveLoadpath = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/'\n\nfrom keras.models import load_model\nImported_model = load_model(saveLoadpath + 'Test_1_A.h5')\n```\n\n# Validation\n\nTwo images which have not been used in training the model are now imported to verfy the model's accuracy.\n\n```         \nlub_pred = cv2.imread('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Test_1_A/Index_2019.jpg')\nlub_pred = cv2.resize(lub_pred, (100,100))\n\nul_pred = cv2.imread('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Test_1_A/Index_862.jpg')\nul_pred = cv2.resize(ul_pred, (100,100))\n```\n\n```         \ncv2_imshow(lub_pred)\ncv2_imshow(ul_pred)\n```\n\n![](images/17.png)\n\n![](images/18.png)\n\n```         \nlub_pred = lub_pred.astype('float32') / 255.0\nul_pred = ul_pred.astype('float32') / 255.0\n```\n\n```         \nlub_pred = np.array(lub_pred)\nul_pred = np.array(ul_pred)\n\nlub_pred = np.expand_dims(lub_pred, axis=0)\nul_pred = np.expand_dims(ul_pred, axis=0)\n```\n\n```         \nprint(Imported_model.predict(lub_pred))\n```\n\n1/1 \\[==============================\\] - 1s 1s/step\n\\[\\[0.9996816\\]\\]\n\n```         \nprint(Imported_model.predict(ul_pred))\n```\n\n1/1 \\[==============================\\] - 0s 31ms/step\n\\[\\[0.00065835\\]\\]\n\nNow, we do the prediction over the entire data\n\n```         \nprediction = []\n\nfor i in range(0, len(df_new['processed_images'])):\n  prediction.append(np.array(cv2.resize(df_new.iloc[i]['processed_images'], df_new.iloc[0]['processed_images'].shape[0:2])))\n```\n\n```         \nprediction = np.array(prediction)\nprediction = prediction.astype('float32') / 255.0\npred_label = Imported_model.predict(prediction)\n```\n\n106/106 \\[==============================\\] - 50s 470ms/step\n\n```         \nfinal_label = []\n\nfor i in range(0, len(pred_label)):\n  if pred_label[i]>=0.6:\n    final_label.append(1)\n  if pred_label[i]<=0.4:\n    final_label.append(0)\n  if (pred_label[i]>0.4) & (pred_label[i]<0.6):\n    final_label.append(-1)\n```\n\n```         \ntime = 16\nimgt = []\nt = []\nfps = 1 / 10\n\ncap = cv2.VideoCapture(video_path)\nclip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\n\nwhile (time)<clip_duration:\n  cap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\n  hasFrames,image0 = cap.read()\n  if hasFrames:\n    image = image0\n    imgt.append(image)\n    t.append(time)\n  time += fps\n\nshots = imgt\n```\n\n```         \nshots = []\nidx = []\n\nfor i in range(0, df_new['time'].shape[0]):\n  if os.path.exists(dirpath + 'Index_' + str(i) + '.jpg'):\n    shots.append(cv2.imread(dirpath + 'Index_' + str(i) + '.jpg'))\n    idx.append('Index_' + str(i))\n  else:\n    break\n\n\ndf_new['Predicted_labels'] = final_label\ninteractive_plot_scatter(df_new, 'time', 'Predicted_labels', xlabel=\"Time(s)\", ylabel=\"Lubrication\")\n```\n\n![](images/19.png)\n\n```         \ndf_new.to_csv('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Predicted_Test1A.csv')\n```\n","srcMarkdownNoYaml":"\n\n## Lubricity detection using Computer Vision\n\nIn this project, a camera was mounted on a rail cart targeted the gage face of the rail. The recorded videos then were processed to autonomously identify lubricated sections\n\n```         \nfrom google.colab import drive\ndrive.mount('/content/drive')\n```\n\n```         \ndef interactive_plot_scatter(df, x_axis, y_axis, xlabel, ylabel):\n  import plotly.express as px\n\n  fig = px.scatter(df, x_axis, y_axis).update_layout(xaxis_title=xlabel, yaxis_title=ylabel)\n\n  return fig.show()\n\ndef interactive_plot_line(df, x_axis, y_axis, xlabel, ylabel):\n  import plotly.express as px\n\n  fig = px.line(df, x_axis, y_axis).update_layout(xaxis_title=xlabel, yaxis_title=ylabel)\n\n  return fig.show()\n```\n\n```         \n!pip install moviepy\n!pip3 install imageio==2.4.1\n!pip install --upgrade imageio-ffmpeg\n```\n\n```         \nimport moviepy.editor as mp\nimport cv2\nimport os\nimport numpy as np\nimport pandas as pd\nfrom google.colab.patches import cv2_imshow\nfrom numpy import genfromtxt\nfrom PIL import Image\nimport os\nfrom moviepy.editor import *\n```\n\n```         \nTest = 'Test_1'\nCamera = 'A'\nEncoder = 'MP4'\n```\n\n```         \nvideo_path = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/' + Test + '/' + Test + '_' + Camera + '.' + Encoder\nsave_path = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/' + Test +'/Reduced_size/' + Test + '_' + Camera + '.' + Encoder\n```\n\n# Find bounds\n\nBy trial and error, coordinates of the target were identified. Now we can crop the images to get rid of redundant parts of the image. This would dramatically reduce the computation cost.\n\n```         \ndef Find_bounds(video_path, time, X_low, X_high, Y_low, Y_high):\n  cap = cv2.VideoCapture(video_path)\n  clip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\n\n  cap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\n  hasFrames,image1 = cap.read()\n\n  image0 = image1[X_low:X_high, Y_low:Y_high]\n\n  # cv2_imshow(image1)\n  # cv2_imshow(image0)\n  return image1, image0\n```\n\n```         \ntime = 40\n\ncap = cv2.VideoCapture(video_path)\ncap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\nhasFrames,image1 = cap.read()\n\nX_low = int(image1.shape[0]/2-125)\nX_high = int(image1.shape[0]/2+25)\nY_low = int(image1.shape[1]/2-75)\nY_high = int(image1.shape[1]/2+75)\n\nimage1, image0 = Find_bounds(video_path, time, X_low, X_high, Y_low, Y_high)\n\ncv2_imshow(image0)\ncv2_imshow(image1)\n```\n\n![](images/14.png)\n\n![](images/15.png)\n\n# Reduce Size\n\nIn this section, we reduce the image sizes to lower the computation cost.\n\n```         \ndef reduce_size(video_path, save_path, Start_Time, End_Time):\n  cap = cv2.VideoCapture(video_path)\n  clip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\n  clip = VideoFileClip(video_path).subclip(Start_Time, End_Time)\n\n  my_width = image1.shape[1]//2\n  my_height = image1.shape[0]//2\n\n  clip_resized = clip.resize(newsize=(my_width, my_height))\n  clip_resized.write_videofile(save_path)\n```\n\n```         \nreduce_size(video_path, save_path, Start_Time = 4*60 + 47, End_Time = 10*60 + 17)\n```\n\n# Framing\n\nIn this section the videos were divided intp frames and saved as images.\n\n```         \nvideo_path = save_path\n\ncap = cv2.VideoCapture(video_path)\n\nclip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\nclip_duration\n```\n\n330.005005\n\n```         \ntime = 0.00\nimg = []\nt = []\nfps = 1 / 10\n\nwhile (time)<clip_duration:\n  cap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\n  hasFrames,image0 = cap.read()\n  if hasFrames:\n    image = image0[int(X_low/2):int(X_high/2), int(Y_low/2):int(Y_high/2)]\n    img.append(image)\n    t.append(time)\n    print(time)\n  time = round(time + fps, 2)\n```\n\n```         \nfrom google.colab.patches import cv2_imshow\n\ncv2_imshow(img[1000])\n```\n\n![](images/16.png)\n\n# Save the frames\n\n```         \nc = 0\nindex = []\ntime0 = time\n\nfor i in t:\n  path = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Camera_C/Index_' + str(c) + '.jpg'\n  cv2.imwrite(path, img[c])\n  index.append('Index_' + str(c))\n  print(i)\n  c = c + 1\n\n\nd = {'Image_index': index, 'time': t}\ndf = pd.DataFrame(data=d)\n\ndf.to_csv('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/index-time_Test1C.csv')\n```\n\n# Load the data\n\n```         \ndf_new = pd.read_csv('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/index-time_Test1A.csv')\n\ndirpath = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Test_1_A/'\n\nshots = []\nidx = []\n\nfor i in range(0, df_new['time'].shape[0]):\n  if os.path.exists(dirpath + 'Index_' + str(i) + '.jpg'):\n    shots.append(cv2.imread(dirpath + 'Index_' + str(i) + '.jpg'))\n    idx.append('Index_' + str(i))\n  else:\n    break\n\n\ndf_new['image_index'] = idx\ndf_new['processed_images'] = shots\n```\n\n# Training\n\n## Auto Labeling\n\nTwo sections of the video were lubricated. We manually labeled part of them for training.\n\n```         \nL = [886, 1379, 1792, 2809]     # L = ['Start of Lubrication' : index number, 'End of Lubrication' : index number, /////]\nendpoint = len(df_new)\nstep = 10\n\nlabels = np.ones(endpoint) * (-1)\n\nfor i in range(0, endpoint, step):\n  labels[i] = 0\n  for j in range(int(len(L) / 2)):\n    if (df_new.iloc[i]['Unnamed: 0']>L[j*2]) and (df_new.iloc[i]['Unnamed: 0']<L[j*2+1]):\n      labels[i] = 1\n\ndf_new['labels'] = labels\ndf_train = df_new[df_new['labels'] != -1]\n```\n\n```         \nfeatures = []\n\nfor i in range(0, len(df_train['processed_images'])):\n  features.append(np.array(df_train.iloc[i]['processed_images']))\n\nfeatures = np.array(features)\n\nlabels = df_train['labels']\n\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split\n\nfeatures = features.astype('float32') / 255.0\n```\n\n```         \ntrain_x, test_x, train_y, test_y = train_test_split(features, labels, test_size=0.2, stratify=labels)\n\ntrain_x, train_y = shuffle(train_x, train_y, random_state=0)\ntest_x, test_y = shuffle(test_x, test_y, random_state=0)\n```\n\n```         \nprint(train_x.shape)\nprint(train_y.shape)\nprint(test_x.shape)\nprint(test_y.shape)\n```\n\n(269, 100, 100, 3)\n(269,)\n(68, 100, 100, 3)\n(68,)\n\n```         \nfrom keras.applications.inception_v3 import InceptionV3\nfrom keras.preprocessing import image\nfrom keras.models import Model, Sequential\nfrom keras.layers import Dense, GlobalAveragePooling2D, Dropout, Flatten, Dense\n```\n\n```         \nbase_model = InceptionV3(weights='imagenet', include_top=False,input_shape=df_train.iloc[0]['processed_images'].shape)\nfor layer in base_model.layers:\n    layer.trainable = False\n\nx = base_model.output\nx = GlobalAveragePooling2D()(x)\nx = Dense(1024, activation='relu')(x)\npredictions = Dense(1, activation='sigmoid')(x)\n\nImported_model = Model(inputs=base_model.input, outputs=predictions)\n```\n\n```         \nImported_model.summary()\n```\n\nModel: \"model_1\"\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\nLayer (type) Output Shape Param \\# Connected to\n==================================================================================================\ninput_2 (InputLayer) \\[(None, 100, 100, 3 0 \\[\\]\n)\\]\n\nconv2d_94 (Conv2D) (None, 49, 49, 32) 864 \\['input_2\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_94 (BatchN (None, 49, 49, 32) 96 \\['conv2d_94\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_94 (Activation) (None, 49, 49, 32) 0 \\['batch_normalization_94\\[0\\]\\[0\\]'\\]\n\nconv2d_95 (Conv2D) (None, 47, 47, 32) 9216 \\['activation_94\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_95 (BatchN (None, 47, 47, 32) 96 \\['conv2d_95\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_95 (Activation) (None, 47, 47, 32) 0 \\['batch_normalization_95\\[0\\]\\[0\\]'\\]\n\nconv2d_96 (Conv2D) (None, 47, 47, 64) 18432 \\['activation_95\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_96 (BatchN (None, 47, 47, 64) 192 \\['conv2d_96\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_96 (Activation) (None, 47, 47, 64) 0 \\['batch_normalization_96\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_4 (MaxPooling2D) (None, 23, 23, 64) 0 \\['activation_96\\[0\\]\\[0\\]'\\]\n\nconv2d_97 (Conv2D) (None, 23, 23, 80) 5120 \\['max_pooling2d_4\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_97 (BatchN (None, 23, 23, 80) 240 \\['conv2d_97\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_97 (Activation) (None, 23, 23, 80) 0 \\['batch_normalization_97\\[0\\]\\[0\\]'\\]\n\nconv2d_98 (Conv2D) (None, 21, 21, 192) 138240 \\['activation_97\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_98 (BatchN (None, 21, 21, 192) 576 \\['conv2d_98\\[0\\]\\[0\\]'\\]\normalization)\n\nactivation_98 (Activation) (None, 21, 21, 192) 0 \\['batch_normalization_98\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_5 (MaxPooling2D) (None, 10, 10, 192) 0 \\['activation_98\\[0\\]\\[0\\]'\\]\n\nconv2d_102 (Conv2D) (None, 10, 10, 64) 12288 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_102 (Batch (None, 10, 10, 64) 192 \\['conv2d_102\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_102 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_102\\[0\\]\\[0\\]'\\]\n\nconv2d_100 (Conv2D) (None, 10, 10, 48) 9216 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\n\nconv2d_103 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_102\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_100 (Batch (None, 10, 10, 48) 144 \\['conv2d_100\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_103 (Batch (None, 10, 10, 96) 288 \\['conv2d_103\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_100 (Activation) (None, 10, 10, 48) 0 \\['batch_normalization_100\\[0\\]\\[0\\]'\\]\n\nactivation_103 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_103\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_9 (AveragePo (None, 10, 10, 192) 0 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\noling2D)\n\nconv2d_99 (Conv2D) (None, 10, 10, 64) 12288 \\['max_pooling2d_5\\[0\\]\\[0\\]'\\]\n\nconv2d_101 (Conv2D) (None, 10, 10, 64) 76800 \\['activation_100\\[0\\]\\[0\\]'\\]\n\nconv2d_104 (Conv2D) (None, 10, 10, 96) 82944 \\['activation_103\\[0\\]\\[0\\]'\\]\n\nconv2d_105 (Conv2D) (None, 10, 10, 32) 6144 \\['average_pooling2d_9\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_99 (BatchN (None, 10, 10, 64) 192 \\['conv2d_99\\[0\\]\\[0\\]'\\]\normalization)\n\nbatch_normalization_101 (Batch (None, 10, 10, 64) 192 \\['conv2d_101\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_104 (Batch (None, 10, 10, 96) 288 \\['conv2d_104\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_105 (Batch (None, 10, 10, 32) 96 \\['conv2d_105\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_99 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_99\\[0\\]\\[0\\]'\\]\n\nactivation_101 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_101\\[0\\]\\[0\\]'\\]\n\nactivation_104 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_104\\[0\\]\\[0\\]'\\]\n\nactivation_105 (Activation) (None, 10, 10, 32) 0 \\['batch_normalization_105\\[0\\]\\[0\\]'\\]\n\nmixed0 (Concatenate) (None, 10, 10, 256) 0 \\['activation_99\\[0\\]\\[0\\]',\n'activation_101\\[0\\]\\[0\\]',\n'activation_104\\[0\\]\\[0\\]',\n'activation_105\\[0\\]\\[0\\]'\\]\n\nconv2d_109 (Conv2D) (None, 10, 10, 64) 16384 \\['mixed0\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_109 (Batch (None, 10, 10, 64) 192 \\['conv2d_109\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_109 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_109\\[0\\]\\[0\\]'\\]\n\nconv2d_107 (Conv2D) (None, 10, 10, 48) 12288 \\['mixed0\\[0\\]\\[0\\]'\\]\n\nconv2d_110 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_109\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_107 (Batch (None, 10, 10, 48) 144 \\['conv2d_107\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_110 (Batch (None, 10, 10, 96) 288 \\['conv2d_110\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_107 (Activation) (None, 10, 10, 48) 0 \\['batch_normalization_107\\[0\\]\\[0\\]'\\]\n\nactivation_110 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_110\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_10 (AverageP (None, 10, 10, 256) 0 \\['mixed0\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_106 (Conv2D) (None, 10, 10, 64) 16384 \\['mixed0\\[0\\]\\[0\\]'\\]\n\nconv2d_108 (Conv2D) (None, 10, 10, 64) 76800 \\['activation_107\\[0\\]\\[0\\]'\\]\n\nconv2d_111 (Conv2D) (None, 10, 10, 96) 82944 \\['activation_110\\[0\\]\\[0\\]'\\]\n\nconv2d_112 (Conv2D) (None, 10, 10, 64) 16384 \\['average_pooling2d_10\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_106 (Batch (None, 10, 10, 64) 192 \\['conv2d_106\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_108 (Batch (None, 10, 10, 64) 192 \\['conv2d_108\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_111 (Batch (None, 10, 10, 96) 288 \\['conv2d_111\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_112 (Batch (None, 10, 10, 64) 192 \\['conv2d_112\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_106 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_106\\[0\\]\\[0\\]'\\]\n\nactivation_108 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_108\\[0\\]\\[0\\]'\\]\n\nactivation_111 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_111\\[0\\]\\[0\\]'\\]\n\nactivation_112 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_112\\[0\\]\\[0\\]'\\]\n\nmixed1 (Concatenate) (None, 10, 10, 288) 0 \\['activation_106\\[0\\]\\[0\\]',\n'activation_108\\[0\\]\\[0\\]',\n'activation_111\\[0\\]\\[0\\]',\n'activation_112\\[0\\]\\[0\\]'\\]\n\nconv2d_116 (Conv2D) (None, 10, 10, 64) 18432 \\['mixed1\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_116 (Batch (None, 10, 10, 64) 192 \\['conv2d_116\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_116 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_116\\[0\\]\\[0\\]'\\]\n\nconv2d_114 (Conv2D) (None, 10, 10, 48) 13824 \\['mixed1\\[0\\]\\[0\\]'\\]\n\nconv2d_117 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_116\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_114 (Batch (None, 10, 10, 48) 144 \\['conv2d_114\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_117 (Batch (None, 10, 10, 96) 288 \\['conv2d_117\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_114 (Activation) (None, 10, 10, 48) 0 \\['batch_normalization_114\\[0\\]\\[0\\]'\\]\n\nactivation_117 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_117\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_11 (AverageP (None, 10, 10, 288) 0 \\['mixed1\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_113 (Conv2D) (None, 10, 10, 64) 18432 \\['mixed1\\[0\\]\\[0\\]'\\]\n\nconv2d_115 (Conv2D) (None, 10, 10, 64) 76800 \\['activation_114\\[0\\]\\[0\\]'\\]\n\nconv2d_118 (Conv2D) (None, 10, 10, 96) 82944 \\['activation_117\\[0\\]\\[0\\]'\\]\n\nconv2d_119 (Conv2D) (None, 10, 10, 64) 18432 \\['average_pooling2d_11\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_113 (Batch (None, 10, 10, 64) 192 \\['conv2d_113\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_115 (Batch (None, 10, 10, 64) 192 \\['conv2d_115\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_118 (Batch (None, 10, 10, 96) 288 \\['conv2d_118\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_119 (Batch (None, 10, 10, 64) 192 \\['conv2d_119\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_113 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_113\\[0\\]\\[0\\]'\\]\n\nactivation_115 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_115\\[0\\]\\[0\\]'\\]\n\nactivation_118 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_118\\[0\\]\\[0\\]'\\]\n\nactivation_119 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_119\\[0\\]\\[0\\]'\\]\n\nmixed2 (Concatenate) (None, 10, 10, 288) 0 \\['activation_113\\[0\\]\\[0\\]',\n'activation_115\\[0\\]\\[0\\]',\n'activation_118\\[0\\]\\[0\\]',\n'activation_119\\[0\\]\\[0\\]'\\]\n\nconv2d_121 (Conv2D) (None, 10, 10, 64) 18432 \\['mixed2\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_121 (Batch (None, 10, 10, 64) 192 \\['conv2d_121\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_121 (Activation) (None, 10, 10, 64) 0 \\['batch_normalization_121\\[0\\]\\[0\\]'\\]\n\nconv2d_122 (Conv2D) (None, 10, 10, 96) 55296 \\['activation_121\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_122 (Batch (None, 10, 10, 96) 288 \\['conv2d_122\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_122 (Activation) (None, 10, 10, 96) 0 \\['batch_normalization_122\\[0\\]\\[0\\]'\\]\n\nconv2d_120 (Conv2D) (None, 4, 4, 384) 995328 \\['mixed2\\[0\\]\\[0\\]'\\]\n\nconv2d_123 (Conv2D) (None, 4, 4, 96) 82944 \\['activation_122\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_120 (Batch (None, 4, 4, 384) 1152 \\['conv2d_120\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_123 (Batch (None, 4, 4, 96) 288 \\['conv2d_123\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_120 (Activation) (None, 4, 4, 384) 0 \\['batch_normalization_120\\[0\\]\\[0\\]'\\]\n\nactivation_123 (Activation) (None, 4, 4, 96) 0 \\['batch_normalization_123\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_6 (MaxPooling2D) (None, 4, 4, 288) 0 \\['mixed2\\[0\\]\\[0\\]'\\]\n\nmixed3 (Concatenate) (None, 4, 4, 768) 0 \\['activation_120\\[0\\]\\[0\\]',\n'activation_123\\[0\\]\\[0\\]',\n'max_pooling2d_6\\[0\\]\\[0\\]'\\]\n\nconv2d_128 (Conv2D) (None, 4, 4, 128) 98304 \\['mixed3\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_128 (Batch (None, 4, 4, 128) 384 \\['conv2d_128\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_128 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_128\\[0\\]\\[0\\]'\\]\n\nconv2d_129 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_128\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_129 (Batch (None, 4, 4, 128) 384 \\['conv2d_129\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_129 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_129\\[0\\]\\[0\\]'\\]\n\nconv2d_125 (Conv2D) (None, 4, 4, 128) 98304 \\['mixed3\\[0\\]\\[0\\]'\\]\n\nconv2d_130 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_129\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_125 (Batch (None, 4, 4, 128) 384 \\['conv2d_125\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_130 (Batch (None, 4, 4, 128) 384 \\['conv2d_130\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_125 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_125\\[0\\]\\[0\\]'\\]\n\nactivation_130 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_130\\[0\\]\\[0\\]'\\]\n\nconv2d_126 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_125\\[0\\]\\[0\\]'\\]\n\nconv2d_131 (Conv2D) (None, 4, 4, 128) 114688 \\['activation_130\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_126 (Batch (None, 4, 4, 128) 384 \\['conv2d_126\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_131 (Batch (None, 4, 4, 128) 384 \\['conv2d_131\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_126 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_126\\[0\\]\\[0\\]'\\]\n\nactivation_131 (Activation) (None, 4, 4, 128) 0 \\['batch_normalization_131\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_12 (AverageP (None, 4, 4, 768) 0 \\['mixed3\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_124 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed3\\[0\\]\\[0\\]'\\]\n\nconv2d_127 (Conv2D) (None, 4, 4, 192) 172032 \\['activation_126\\[0\\]\\[0\\]'\\]\n\nconv2d_132 (Conv2D) (None, 4, 4, 192) 172032 \\['activation_131\\[0\\]\\[0\\]'\\]\n\nconv2d_133 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_12\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_124 (Batch (None, 4, 4, 192) 576 \\['conv2d_124\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_127 (Batch (None, 4, 4, 192) 576 \\['conv2d_127\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_132 (Batch (None, 4, 4, 192) 576 \\['conv2d_132\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_133 (Batch (None, 4, 4, 192) 576 \\['conv2d_133\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_124 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_124\\[0\\]\\[0\\]'\\]\n\nactivation_127 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_127\\[0\\]\\[0\\]'\\]\n\nactivation_132 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_132\\[0\\]\\[0\\]'\\]\n\nactivation_133 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_133\\[0\\]\\[0\\]'\\]\n\nmixed4 (Concatenate) (None, 4, 4, 768) 0 \\['activation_124\\[0\\]\\[0\\]',\n'activation_127\\[0\\]\\[0\\]',\n'activation_132\\[0\\]\\[0\\]',\n'activation_133\\[0\\]\\[0\\]'\\]\n\nconv2d_138 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed4\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_138 (Batch (None, 4, 4, 160) 480 \\['conv2d_138\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_138 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_138\\[0\\]\\[0\\]'\\]\n\nconv2d_139 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_138\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_139 (Batch (None, 4, 4, 160) 480 \\['conv2d_139\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_139 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_139\\[0\\]\\[0\\]'\\]\n\nconv2d_135 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed4\\[0\\]\\[0\\]'\\]\n\nconv2d_140 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_139\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_135 (Batch (None, 4, 4, 160) 480 \\['conv2d_135\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_140 (Batch (None, 4, 4, 160) 480 \\['conv2d_140\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_135 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_135\\[0\\]\\[0\\]'\\]\n\nactivation_140 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_140\\[0\\]\\[0\\]'\\]\n\nconv2d_136 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_135\\[0\\]\\[0\\]'\\]\n\nconv2d_141 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_140\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_136 (Batch (None, 4, 4, 160) 480 \\['conv2d_136\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_141 (Batch (None, 4, 4, 160) 480 \\['conv2d_141\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_136 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_136\\[0\\]\\[0\\]'\\]\n\nactivation_141 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_141\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_13 (AverageP (None, 4, 4, 768) 0 \\['mixed4\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_134 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed4\\[0\\]\\[0\\]'\\]\n\nconv2d_137 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_136\\[0\\]\\[0\\]'\\]\n\nconv2d_142 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_141\\[0\\]\\[0\\]'\\]\n\nconv2d_143 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_13\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_134 (Batch (None, 4, 4, 192) 576 \\['conv2d_134\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_137 (Batch (None, 4, 4, 192) 576 \\['conv2d_137\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_142 (Batch (None, 4, 4, 192) 576 \\['conv2d_142\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_143 (Batch (None, 4, 4, 192) 576 \\['conv2d_143\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_134 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_134\\[0\\]\\[0\\]'\\]\n\nactivation_137 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_137\\[0\\]\\[0\\]'\\]\n\nactivation_142 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_142\\[0\\]\\[0\\]'\\]\n\nactivation_143 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_143\\[0\\]\\[0\\]'\\]\n\nmixed5 (Concatenate) (None, 4, 4, 768) 0 \\['activation_134\\[0\\]\\[0\\]',\n'activation_137\\[0\\]\\[0\\]',\n'activation_142\\[0\\]\\[0\\]',\n'activation_143\\[0\\]\\[0\\]'\\]\n\nconv2d_148 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed5\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_148 (Batch (None, 4, 4, 160) 480 \\['conv2d_148\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_148 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_148\\[0\\]\\[0\\]'\\]\n\nconv2d_149 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_148\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_149 (Batch (None, 4, 4, 160) 480 \\['conv2d_149\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_149 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_149\\[0\\]\\[0\\]'\\]\n\nconv2d_145 (Conv2D) (None, 4, 4, 160) 122880 \\['mixed5\\[0\\]\\[0\\]'\\]\n\nconv2d_150 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_149\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_145 (Batch (None, 4, 4, 160) 480 \\['conv2d_145\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_150 (Batch (None, 4, 4, 160) 480 \\['conv2d_150\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_145 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_145\\[0\\]\\[0\\]'\\]\n\nactivation_150 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_150\\[0\\]\\[0\\]'\\]\n\nconv2d_146 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_145\\[0\\]\\[0\\]'\\]\n\nconv2d_151 (Conv2D) (None, 4, 4, 160) 179200 \\['activation_150\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_146 (Batch (None, 4, 4, 160) 480 \\['conv2d_146\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_151 (Batch (None, 4, 4, 160) 480 \\['conv2d_151\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_146 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_146\\[0\\]\\[0\\]'\\]\n\nactivation_151 (Activation) (None, 4, 4, 160) 0 \\['batch_normalization_151\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_14 (AverageP (None, 4, 4, 768) 0 \\['mixed5\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_144 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed5\\[0\\]\\[0\\]'\\]\n\nconv2d_147 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_146\\[0\\]\\[0\\]'\\]\n\nconv2d_152 (Conv2D) (None, 4, 4, 192) 215040 \\['activation_151\\[0\\]\\[0\\]'\\]\n\nconv2d_153 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_14\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_144 (Batch (None, 4, 4, 192) 576 \\['conv2d_144\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_147 (Batch (None, 4, 4, 192) 576 \\['conv2d_147\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_152 (Batch (None, 4, 4, 192) 576 \\['conv2d_152\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_153 (Batch (None, 4, 4, 192) 576 \\['conv2d_153\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_144 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_144\\[0\\]\\[0\\]'\\]\n\nactivation_147 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_147\\[0\\]\\[0\\]'\\]\n\nactivation_152 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_152\\[0\\]\\[0\\]'\\]\n\nactivation_153 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_153\\[0\\]\\[0\\]'\\]\n\nmixed6 (Concatenate) (None, 4, 4, 768) 0 \\['activation_144\\[0\\]\\[0\\]',\n'activation_147\\[0\\]\\[0\\]',\n'activation_152\\[0\\]\\[0\\]',\n'activation_153\\[0\\]\\[0\\]'\\]\n\nconv2d_158 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed6\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_158 (Batch (None, 4, 4, 192) 576 \\['conv2d_158\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_158 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_158\\[0\\]\\[0\\]'\\]\n\nconv2d_159 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_158\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_159 (Batch (None, 4, 4, 192) 576 \\['conv2d_159\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_159 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_159\\[0\\]\\[0\\]'\\]\n\nconv2d_155 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed6\\[0\\]\\[0\\]'\\]\n\nconv2d_160 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_159\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_155 (Batch (None, 4, 4, 192) 576 \\['conv2d_155\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_160 (Batch (None, 4, 4, 192) 576 \\['conv2d_160\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_155 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_155\\[0\\]\\[0\\]'\\]\n\nactivation_160 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_160\\[0\\]\\[0\\]'\\]\n\nconv2d_156 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_155\\[0\\]\\[0\\]'\\]\n\nconv2d_161 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_160\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_156 (Batch (None, 4, 4, 192) 576 \\['conv2d_156\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_161 (Batch (None, 4, 4, 192) 576 \\['conv2d_161\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_156 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_156\\[0\\]\\[0\\]'\\]\n\nactivation_161 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_161\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_15 (AverageP (None, 4, 4, 768) 0 \\['mixed6\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_154 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed6\\[0\\]\\[0\\]'\\]\n\nconv2d_157 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_156\\[0\\]\\[0\\]'\\]\n\nconv2d_162 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_161\\[0\\]\\[0\\]'\\]\n\nconv2d_163 (Conv2D) (None, 4, 4, 192) 147456 \\['average_pooling2d_15\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_154 (Batch (None, 4, 4, 192) 576 \\['conv2d_154\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_157 (Batch (None, 4, 4, 192) 576 \\['conv2d_157\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_162 (Batch (None, 4, 4, 192) 576 \\['conv2d_162\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_163 (Batch (None, 4, 4, 192) 576 \\['conv2d_163\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_154 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_154\\[0\\]\\[0\\]'\\]\n\nactivation_157 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_157\\[0\\]\\[0\\]'\\]\n\nactivation_162 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_162\\[0\\]\\[0\\]'\\]\n\nactivation_163 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_163\\[0\\]\\[0\\]'\\]\n\nmixed7 (Concatenate) (None, 4, 4, 768) 0 \\['activation_154\\[0\\]\\[0\\]',\n'activation_157\\[0\\]\\[0\\]',\n'activation_162\\[0\\]\\[0\\]',\n'activation_163\\[0\\]\\[0\\]'\\]\n\nconv2d_166 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed7\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_166 (Batch (None, 4, 4, 192) 576 \\['conv2d_166\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_166 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_166\\[0\\]\\[0\\]'\\]\n\nconv2d_167 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_166\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_167 (Batch (None, 4, 4, 192) 576 \\['conv2d_167\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_167 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_167\\[0\\]\\[0\\]'\\]\n\nconv2d_164 (Conv2D) (None, 4, 4, 192) 147456 \\['mixed7\\[0\\]\\[0\\]'\\]\n\nconv2d_168 (Conv2D) (None, 4, 4, 192) 258048 \\['activation_167\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_164 (Batch (None, 4, 4, 192) 576 \\['conv2d_164\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_168 (Batch (None, 4, 4, 192) 576 \\['conv2d_168\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_164 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_164\\[0\\]\\[0\\]'\\]\n\nactivation_168 (Activation) (None, 4, 4, 192) 0 \\['batch_normalization_168\\[0\\]\\[0\\]'\\]\n\nconv2d_165 (Conv2D) (None, 1, 1, 320) 552960 \\['activation_164\\[0\\]\\[0\\]'\\]\n\nconv2d_169 (Conv2D) (None, 1, 1, 192) 331776 \\['activation_168\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_165 (Batch (None, 1, 1, 320) 960 \\['conv2d_165\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_169 (Batch (None, 1, 1, 192) 576 \\['conv2d_169\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_165 (Activation) (None, 1, 1, 320) 0 \\['batch_normalization_165\\[0\\]\\[0\\]'\\]\n\nactivation_169 (Activation) (None, 1, 1, 192) 0 \\['batch_normalization_169\\[0\\]\\[0\\]'\\]\n\nmax_pooling2d_7 (MaxPooling2D) (None, 1, 1, 768) 0 \\['mixed7\\[0\\]\\[0\\]'\\]\n\nmixed8 (Concatenate) (None, 1, 1, 1280) 0 \\['activation_165\\[0\\]\\[0\\]',\n'activation_169\\[0\\]\\[0\\]',\n'max_pooling2d_7\\[0\\]\\[0\\]'\\]\n\nconv2d_174 (Conv2D) (None, 1, 1, 448) 573440 \\['mixed8\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_174 (Batch (None, 1, 1, 448) 1344 \\['conv2d_174\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_174 (Activation) (None, 1, 1, 448) 0 \\['batch_normalization_174\\[0\\]\\[0\\]'\\]\n\nconv2d_171 (Conv2D) (None, 1, 1, 384) 491520 \\['mixed8\\[0\\]\\[0\\]'\\]\n\nconv2d_175 (Conv2D) (None, 1, 1, 384) 1548288 \\['activation_174\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_171 (Batch (None, 1, 1, 384) 1152 \\['conv2d_171\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_175 (Batch (None, 1, 1, 384) 1152 \\['conv2d_175\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_171 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_171\\[0\\]\\[0\\]'\\]\n\nactivation_175 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_175\\[0\\]\\[0\\]'\\]\n\nconv2d_172 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_171\\[0\\]\\[0\\]'\\]\n\nconv2d_173 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_171\\[0\\]\\[0\\]'\\]\n\nconv2d_176 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_175\\[0\\]\\[0\\]'\\]\n\nconv2d_177 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_175\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_16 (AverageP (None, 1, 1, 1280) 0 \\['mixed8\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_170 (Conv2D) (None, 1, 1, 320) 409600 \\['mixed8\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_172 (Batch (None, 1, 1, 384) 1152 \\['conv2d_172\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_173 (Batch (None, 1, 1, 384) 1152 \\['conv2d_173\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_176 (Batch (None, 1, 1, 384) 1152 \\['conv2d_176\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_177 (Batch (None, 1, 1, 384) 1152 \\['conv2d_177\\[0\\]\\[0\\]'\\]\nNormalization)\n\nconv2d_178 (Conv2D) (None, 1, 1, 192) 245760 \\['average_pooling2d_16\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_170 (Batch (None, 1, 1, 320) 960 \\['conv2d_170\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_172 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_172\\[0\\]\\[0\\]'\\]\n\nactivation_173 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_173\\[0\\]\\[0\\]'\\]\n\nactivation_176 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_176\\[0\\]\\[0\\]'\\]\n\nactivation_177 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_177\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_178 (Batch (None, 1, 1, 192) 576 \\['conv2d_178\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_170 (Activation) (None, 1, 1, 320) 0 \\['batch_normalization_170\\[0\\]\\[0\\]'\\]\n\nmixed9_0 (Concatenate) (None, 1, 1, 768) 0 \\['activation_172\\[0\\]\\[0\\]',\n'activation_173\\[0\\]\\[0\\]'\\]\n\nconcatenate_2 (Concatenate) (None, 1, 1, 768) 0 \\['activation_176\\[0\\]\\[0\\]',\n'activation_177\\[0\\]\\[0\\]'\\]\n\nactivation_178 (Activation) (None, 1, 1, 192) 0 \\['batch_normalization_178\\[0\\]\\[0\\]'\\]\n\nmixed9 (Concatenate) (None, 1, 1, 2048) 0 \\['activation_170\\[0\\]\\[0\\]',\n'mixed9_0\\[0\\]\\[0\\]',\n'concatenate_2\\[0\\]\\[0\\]',\n'activation_178\\[0\\]\\[0\\]'\\]\n\nconv2d_183 (Conv2D) (None, 1, 1, 448) 917504 \\['mixed9\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_183 (Batch (None, 1, 1, 448) 1344 \\['conv2d_183\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_183 (Activation) (None, 1, 1, 448) 0 \\['batch_normalization_183\\[0\\]\\[0\\]'\\]\n\nconv2d_180 (Conv2D) (None, 1, 1, 384) 786432 \\['mixed9\\[0\\]\\[0\\]'\\]\n\nconv2d_184 (Conv2D) (None, 1, 1, 384) 1548288 \\['activation_183\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_180 (Batch (None, 1, 1, 384) 1152 \\['conv2d_180\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_184 (Batch (None, 1, 1, 384) 1152 \\['conv2d_184\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_180 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_180\\[0\\]\\[0\\]'\\]\n\nactivation_184 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_184\\[0\\]\\[0\\]'\\]\n\nconv2d_181 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_180\\[0\\]\\[0\\]'\\]\n\nconv2d_182 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_180\\[0\\]\\[0\\]'\\]\n\nconv2d_185 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_184\\[0\\]\\[0\\]'\\]\n\nconv2d_186 (Conv2D) (None, 1, 1, 384) 442368 \\['activation_184\\[0\\]\\[0\\]'\\]\n\naverage_pooling2d_17 (AverageP (None, 1, 1, 2048) 0 \\['mixed9\\[0\\]\\[0\\]'\\]\nooling2D)\n\nconv2d_179 (Conv2D) (None, 1, 1, 320) 655360 \\['mixed9\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_181 (Batch (None, 1, 1, 384) 1152 \\['conv2d_181\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_182 (Batch (None, 1, 1, 384) 1152 \\['conv2d_182\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_185 (Batch (None, 1, 1, 384) 1152 \\['conv2d_185\\[0\\]\\[0\\]'\\]\nNormalization)\n\nbatch_normalization_186 (Batch (None, 1, 1, 384) 1152 \\['conv2d_186\\[0\\]\\[0\\]'\\]\nNormalization)\n\nconv2d_187 (Conv2D) (None, 1, 1, 192) 393216 \\['average_pooling2d_17\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_179 (Batch (None, 1, 1, 320) 960 \\['conv2d_179\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_181 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_181\\[0\\]\\[0\\]'\\]\n\nactivation_182 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_182\\[0\\]\\[0\\]'\\]\n\nactivation_185 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_185\\[0\\]\\[0\\]'\\]\n\nactivation_186 (Activation) (None, 1, 1, 384) 0 \\['batch_normalization_186\\[0\\]\\[0\\]'\\]\n\nbatch_normalization_187 (Batch (None, 1, 1, 192) 576 \\['conv2d_187\\[0\\]\\[0\\]'\\]\nNormalization)\n\nactivation_179 (Activation) (None, 1, 1, 320) 0 \\['batch_normalization_179\\[0\\]\\[0\\]'\\]\n\nmixed9_1 (Concatenate) (None, 1, 1, 768) 0 \\['activation_181\\[0\\]\\[0\\]',\n'activation_182\\[0\\]\\[0\\]'\\]\n\nconcatenate_3 (Concatenate) (None, 1, 1, 768) 0 \\['activation_185\\[0\\]\\[0\\]',\n'activation_186\\[0\\]\\[0\\]'\\]\n\nactivation_187 (Activation) (None, 1, 1, 192) 0 \\['batch_normalization_187\\[0\\]\\[0\\]'\\]\n\nmixed10 (Concatenate) (None, 1, 1, 2048) 0 \\['activation_179\\[0\\]\\[0\\]',\n'mixed9_1\\[0\\]\\[0\\]',\n'concatenate_3\\[0\\]\\[0\\]',\n'activation_187\\[0\\]\\[0\\]'\\]\n\nglobal_average_pooling2d_1 (Gl (None, 2048) 0 \\['mixed10\\[0\\]\\[0\\]'\\]\nobalAveragePooling2D)\n\ndense_2 (Dense) (None, 1024) 2098176 \\['global_average_pooling2d_1\\[0\\]\\[0\n\\]'\\]\n\ndense_3 (Dense) (None, 1) 1025 \\['dense_2\\[0\\]\\[0\\]'\\]\n\n==================================================================================================\nTotal params: 23,901,985\nTrainable params: 2,099,201\nNon-trainable params: 21,802,784\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\n```         \nsaveLoadpath = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/'\n\nImported_model.save(saveLoadpath + 'Test_1_A.h5')\n```\n\n```         \nsaveLoadpath = '/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/'\n\nfrom keras.models import load_model\nImported_model = load_model(saveLoadpath + 'Test_1_A.h5')\n```\n\n# Validation\n\nTwo images which have not been used in training the model are now imported to verfy the model's accuracy.\n\n```         \nlub_pred = cv2.imread('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Test_1_A/Index_2019.jpg')\nlub_pred = cv2.resize(lub_pred, (100,100))\n\nul_pred = cv2.imread('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Cropped_frames_Test_1_A/Index_862.jpg')\nul_pred = cv2.resize(ul_pred, (100,100))\n```\n\n```         \ncv2_imshow(lub_pred)\ncv2_imshow(ul_pred)\n```\n\n![](images/17.png)\n\n![](images/18.png)\n\n```         \nlub_pred = lub_pred.astype('float32') / 255.0\nul_pred = ul_pred.astype('float32') / 255.0\n```\n\n```         \nlub_pred = np.array(lub_pred)\nul_pred = np.array(ul_pred)\n\nlub_pred = np.expand_dims(lub_pred, axis=0)\nul_pred = np.expand_dims(ul_pred, axis=0)\n```\n\n```         \nprint(Imported_model.predict(lub_pred))\n```\n\n1/1 \\[==============================\\] - 1s 1s/step\n\\[\\[0.9996816\\]\\]\n\n```         \nprint(Imported_model.predict(ul_pred))\n```\n\n1/1 \\[==============================\\] - 0s 31ms/step\n\\[\\[0.00065835\\]\\]\n\nNow, we do the prediction over the entire data\n\n```         \nprediction = []\n\nfor i in range(0, len(df_new['processed_images'])):\n  prediction.append(np.array(cv2.resize(df_new.iloc[i]['processed_images'], df_new.iloc[0]['processed_images'].shape[0:2])))\n```\n\n```         \nprediction = np.array(prediction)\nprediction = prediction.astype('float32') / 255.0\npred_label = Imported_model.predict(prediction)\n```\n\n106/106 \\[==============================\\] - 50s 470ms/step\n\n```         \nfinal_label = []\n\nfor i in range(0, len(pred_label)):\n  if pred_label[i]>=0.6:\n    final_label.append(1)\n  if pred_label[i]<=0.4:\n    final_label.append(0)\n  if (pred_label[i]>0.4) & (pred_label[i]<0.6):\n    final_label.append(-1)\n```\n\n```         \ntime = 16\nimgt = []\nt = []\nfps = 1 / 10\n\ncap = cv2.VideoCapture(video_path)\nclip_duration = cap.get(cv2.CAP_PROP_FRAME_COUNT) / cap.get(cv2.CAP_PROP_FPS)\n\nwhile (time)<clip_duration:\n  cap.set(cv2.CAP_PROP_POS_MSEC,time*1000)\n  hasFrames,image0 = cap.read()\n  if hasFrames:\n    image = image0\n    imgt.append(image)\n    t.append(time)\n  time += fps\n\nshots = imgt\n```\n\n```         \nshots = []\nidx = []\n\nfor i in range(0, df_new['time'].shape[0]):\n  if os.path.exists(dirpath + 'Index_' + str(i) + '.jpg'):\n    shots.append(cv2.imread(dirpath + 'Index_' + str(i) + '.jpg'))\n    idx.append('Index_' + str(i))\n  else:\n    break\n\n\ndf_new['Predicted_labels'] = final_label\ninteractive_plot_scatter(df_new, 'time', 'Predicted_labels', xlabel=\"Time(s)\", ylabel=\"Lubrication\")\n```\n\n![](images/19.png)\n\n```         \ndf_new.to_csv('/content/drive/MyDrive/RTL_Lubricity/Machine_Vision/Hucklebery/6_8_2023/Test_1/Predicted_Test1A.csv')\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","theme":"cosmo","title-block-banner":true,"title":"CV for Lubricity","author":"Morteza Mirzaei","date":"2023-12-09","categories":["code","analysis"],"image":"image.jpg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}